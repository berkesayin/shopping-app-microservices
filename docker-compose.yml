services:
  postgres:
    image: postgres:latest
    container_name: be-pgdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: product
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - be-net
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: be-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      # PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - be-net
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: be-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo:/data
    ports:
      - 27017:27017
    networks:
      - be-net
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  mongo-express:
    image: mongo-express:latest
    container_name: be-mongo-express
    ports:
      - 8081:8081
    networks:
      - be-net
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: be-zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    ports:
      - "22181:2181"
    networks:
      - be-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: be-kafka
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
      JMX_PORT: 9999 
    volumes:
      - kafka_data:/var/lib/kafka/data 
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999" 
    networks:
      - be-net
    depends_on:
      - zookeeper

  maildev:
    image: maildev/maildev:latest
    container_name: be-maildev
    ports:
      - 1080:1080
      - 1025:1025 # SMTP Server
    networks:
      - be-net

  redis:
    image: redis:7-alpine
    container_name: be-redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - be-net

  redis-insight:
    image: redis/redisinsight:latest
    container_name: be-redisinsight
    ports:
      - "5540:5540"
    volumes:
      - redisinsight:/data
    networks:
      - be-net
    restart: always

networks:
  be-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:
  redisinsight:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

